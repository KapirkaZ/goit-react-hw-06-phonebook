{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Container/Container.jsx","App.js","redux/contacts/contactsActions.js","components/Notification/Notification.js","redux/contacts/contactsReducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","connect","state","contacts","items","filter","contact","name","toLowerCase","includes","onRemoveContact","className","styles","TaskList","map","TaskList_item","number","buttonstyle","TaskList_button","type","onClick","id","Filter","value","onChangeFilter","filterstyle","inputstyle","onChange","e","target","ContactForm","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","pattern","TaskEditor_button","Component","Container","children","container","App","addContacts","createAction","payload","uuidv4","removeContacts","changeFilter","defaultModules","set","PNotifyMobile","createReducer","contactsActions","action","item","trim","error","text","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d710328e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"Filter_filterstyle__3M6To\",\"inputstyle\":\"Filter_inputstyle__2OOtZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__197Sm\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className={styles.TaskList_item} key={contact.id}>\n        {contact.name + \": \" + contact.number}\n        {\n          <span className={styles.buttonstyle}>\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemoveContact(contact.id)}\n            ></button>\n          </span>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className={styles.filterstyle}>\n      Find contacts by name\n      <input\n        className={styles.inputstyle}\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n//       // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem(\"contacts\");\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   gatheredData = (data) => {\n//     const newData = data;\n//     return newData;\n//   };\n\n//   addContact = (task) => {\n//     const searchSameName = this.state.contacts\n//       .map((cont) => cont.name.toLowerCase())\n//       .includes(task.name);\n\n//     if (searchSameName) {\n//       alert(`${task.name} is already in contacts`);\n//     } else if (task.name.length === 0) {\n//       alert(\"Fields must be filled!\");\n//     } else {\n//       const contact = {\n//         ...task,\n//         id: uuidv4(),\n//       };\n\n//       this.setState((prevState) => ({\n//         contacts: [...prevState.contacts, contact],\n//       }));\n//     }\n//   };\n\n//   deleteContact = (nameId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter((name) => name.id !== nameId),\n//     }));\n//   };\n\n//   changeFilter = (filter) => {\n//     this.setState({ filter });\n//   };\n\n//   getFilteredNames = () => {\n//     const { filter, contacts } = this.state;\n//     // const normalizeFilter = filter.toLowerCase();\n\n//     return contacts.filter((contacts) =>\n//       contacts.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n//   removeContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       };\n//     });\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n//     const filteredNames = this.getFilteredNames();\n\n//     return (\n//       <Container>\n//         <h1>Phonebook</h1>\n\n//         <ContactForm onAddContact={this.addContact} />\n//         <h1>Contacts</h1>\n\n//         <Filter value={filter} onChangeFilter={this.changeFilter} />\n\n//         <ContactList\n//           contacts={filteredNames}\n//           onRemoveContact={this.removeContact}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n\nexport default function App() {\n  return (\n    <Container>\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm />\n\n        <Filter />\n\n        <ContactList />\n      </div>\n    </Container>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContacts = createAction(\"contacts/addContact\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst removeContacts = createAction(\"contacts/removeContact\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContacts, removeContacts, changeFilter };\r\n","import { error, defaultModules } from \"@pnotify/core/dist/PNotify.js\";\r\nimport * as PNotifyMobile from \"@pnotify/mobile/dist/PNotifyMobile.js\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\n\r\ndefaultModules.set(PNotifyMobile, {});\r\n\r\nexport default function errorMessage(name) {\r\n  error({\r\n    text: `${name} is already in contacts!`,\r\n  });\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nimport errorMessage from \"../../components/Notification/Notification\";\r\n\r\nconst INITIAL_DATA = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst addContacts = (state, action) => {\r\n  const names = state.map((item) => item.name.toLowerCase());\r\n  const isNotUniqueContact = names.includes(\r\n    action.payload.contact.name.toLowerCase().trim()\r\n  );\r\n\r\n  if (isNotUniqueContact) {\r\n    errorMessage(action.payload.contact.name);\r\n    return state;\r\n  } else {\r\n    return [...state, action.payload.contact];\r\n  }\r\n};\r\n\r\nconst removeContacts = (state, action) => {\r\n  return state.filter(({ id }) => id !== action.payload);\r\n};\r\n\r\nconst items = createReducer(INITIAL_DATA, {\r\n  [contactsActions.addContacts]: addContacts,\r\n  [contactsActions.removeContacts]: removeContacts,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__3g-mg\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__3dgPh\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__1MFka\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__3ZymR\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__1fN_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__1A_pV\",\"TaskList_item\":\"ContactList_TaskList_item__26sUs\",\"completed\":\"ContactList_completed__1DCGI\",\"TaskList_text\":\"ContactList_TaskList_text__2-2Ie\",\"TaskList_actions\":\"ContactList_TaskList_actions__11gBx\",\"TaskList_button\":\"ContactList_TaskList_button__38mue\",\"buttonstyle\":\"ContactList_buttonstyle__3ty8j\"};"],"sourceRoot":""}